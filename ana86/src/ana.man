		８０８６アセンブラ・プリプロセッサ

		    ａｎａ８６(L1) ver. 0.17



■  はじめに

  8086 アセンブラ・プリプロセッサです。
  masm(v3)系のソースと、LSI-C 試食版のr86 用のソースが生成できます。
（ただし、r86 では制限される部分があります）
  完成品といいがたく（言語仕様が不安定... 変更の可能性大）、チェック不
十分でバグもまだまだあるはずで、サンプルらしいサンプルはなく、ドキュメ
ントも不親切なしろもんですが、もすこしちゃんとしたもんにしてから、と、
思ってると、いつまでたっても公開できないので、とりあえず、公開します。

  ぼく自身、あまし使ってないし、せいぜいＣの関数をちょこっと書いた程度
なんですが..



■  つかいかた

usage: ANA [-opts] <ﾌｧｲﾙ名> [-opts]
 
   ファイルはひとつだけ指定してください。
 
   アセンブラのソースを生成するだけなので、アセンブラやリンカの起動を
 行ないたい方はバッチを組むとか、make を利用してください。
 
   オプション無指定だと、標準出力になるので、たいてい -o(-s) を付ける
 ことになるでしょう。

 

■  オプション
 
 -c[1|2]
 	ソースをコメントにして出力(ファイル名・行番号付き)
 	-c1:ファイル名なし  -c2:ファイル名・行番号なし
	デバッグ中は -c を指定したほうがいいでしょう。

 -1
 	186(V30) の命令を有効にします。

 -b[0]
 	var変数で 0 初期化するものを BSS に配置する/-b0 しない。
	おもにＣの関数を作るときに指定してください。

 -tg
 	生成されるローカルな変数名・手続き名もpublic指定にする。
 	デバッグの為にあります。
 	
 -q[0|1]
     	手続き引数の暗黙の代入を 0:禁止する *1:しない

 -al
 	LSI-C用のセグメント名にします。(ｻﾎﾟｰﾄ不完全)
	LSI-Cの関数を作るときのためにあります。
	  
 -ar
 	出力先アセンブラとして LSI r86 を用います(ｻﾎﾟｰﾄ不完全)
 
 -aa
 	手続きの入口で assume を生成しません。
 
 -s[<path>]
	出力を<path>にします。

 -o[<dir>]
  	拡張子を.asm にしたファイルをディレクトリ<dir>に出力します。

 -e[<path>]
 	エラー出力を<path>にします。
 	<path> が省略されると、errors というファイルに出力します。

 -i<dir>
 	<..> でimportするディレクトリを<dir>にします。
 	.cfg ファイル中に定義するといいでしょう。

 -m(t|s|c|m|l)
 	メモリ・モデルの指定
	スモール・モデル以外を作るときに指定してください。

 -d<lbl>[=<str>]
 	@define <lbl> <str> で予約ラベル領域に登録します。
	初期値のないときは０が設定されます。

 -g<lbl>[=<val>]
	@set <lbl> = <val> で予約領域に登録します。
	val は 10進数です。
	初期値のないときは０が設定されます。

	-d,-g で登録された名前はモジュール名を付ける必要がありません！

 -r
 	-alargLSI_C=2
 	r86 を使って LSI-C の関数を作るときに指定するとよいでせう。



■  ana.cfg ファイル

    オプションをこのファイルに書いておくことができます。
    ana.exe のあるディレクトリに、必ず一緒にいれてください。
    ないと、エラーになります。



■  デバッグ

    デバッグにはかなり不自由することになります。
    ana 自身のバグもかなりありえるので、作成中、うまく動作しないとき
  はたえず -c でコメントを一緒に出力し、ちゃんと生成されてるか、たし
  かめたほうがいいでしょう。
    ファイル名と行番号を付けているのでタグ・ジャンプできるのですこし
  はマシだと思います（そのぶん、生成されるファイルがでかくなってしま
  いますが）
    届かないジャンプはよく発生するのはガマンしてください。こまめに、
  .w を付加してください。
  


■  アセンブラ

  masm 系アセンブラとしてはフリーウェアの Arrowsoft Assembler v1.00d
を使ってます（貧乏人^^;）。これは、masm v3 相当の文法らしいです... 
ので、他のものでも大抵大丈夫でしょう。
  r86 では、機能が制限されます（後述）。

  基本的に、スモール・モデルを前提に作ったので、ラージとか他のモデル
だと不都合があるかもしれません。

  アセンブラについては、ぼくはまだまだ分かってないところがあるので、
不都合がありますが、まあ、Ｃの関数を書く分には十分な感じもします。

（ＢＳＳ領域の消去方法がようわからん... というかアセンブラのセグメン
  トの扱いがわかってない...）



■  LSI-C試食版の r86 使用での制限

  r86 では、以下のように機能が制限されます。
  ・assume とかは無視し、生成しません。
    （もっとも ana では assume を使うことがないかも...）
  ・80186以降のかけ算は生成できません。
    （enter,leave,pusha,popa,定数回シフトは(db,dw で)生成します）
  ・bss に配置された変数が０が生成されてしまいます。
    link の最初の .obj が、r86 で生成されていなければ別に大丈夫なようで
    すが...  Ｃの関数を書く程度なら関係ないです。

  （LSI-C86試食版一式をフリーソフトウェアとしてくださってるLSIジャパン
    に感謝します...しかし、r86 を流用してよかったのだろうか^^;）



■  おわりに

  このプログラムは、Turbo C(++ v1.01) で作成されています。
  フリーソフトウェアとします。プログラムの著作権は放棄していません。
  このプログラムを使ったことによる問題・被害の責任を作者は負いません。
利用者の責任で使ってください。バージョン・アップ、バグ取りも作者の義務
ではありません。が、バグ取りなどは可能なら取りたいので、連絡いただける
とありがたいす。
  
  あまりに不安定なものなので、再配布はあまり気乗りしません。が、配布し
たい、なんて奇特な方は事前に連絡くださればかまいません。もちろん、知人
間の受渡し程度なら連絡不用です。ただし、作者本人のアップしたものをダウ
ンできない人による再配布は駄目です。

  言語仕様が不安定で、バージョン・アップにより、仕様が代わる可能性もあ
るので、使ってくださるというかたは、覚悟してください。
（バージョン・アップするかどうかも怪しいですが^^;）


					NBB00541  てんか☆（北村雅史）
