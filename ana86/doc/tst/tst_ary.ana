module CHK

var	 v_vb:byte,v_vw:w,v_vd:dword
cvar v_cvb:byte,v_cvw:w,v_cvd:dword
var  v_ab:byte(20),v_aw:w(10)


proc VarTst()
enter
	ah = byte[es:0xff]
	al = byte[es:bx]
	ax = w[cs:bx+si]
	dx = w[ds:bp+di+30]


	// ÉåÉWÉXÉ^ÅÅïœêî
	bl = v_vb
	bh = v_cvb
	ax = v_vw

	ax = %w.h
	ax = %tst
	ax = %tst+1
	ax = &w[bx + si]
	ax = &w[bx + si + %tst]
	ax = &v_aw(5)
	ax = &v_ab(5)
	ax = &v_ab[5]
	ax = &tst

	dword[si] = ww(es,cx)
	dx.ax = ww(0x100,0x100)
	dx.ax = ww(es,w[bx])
	dx.ax = ww(w[si],w[di])
endproc

////////////////////////////////
proc LocalVarTst()
enter
	local lbuf:b(50)

	ah = lbuf(0)
	al = lbuf(1)
	ah = lbuf[0]
	al = lbuf[1]
	ah = lbuf[si]
	al = lbuf[di+20]
	ah = lbuf[bx]
	
	ax = %lbuf
	ax = &lbuf
	ax = &lbuf(3)
	ax = &lbuf[3]
	ax = &lbuf[si]
endproc

////////////////////////////////
	var ar:byte(5+1),arw:word(3)
	var a2:byte(4,10)
	var a:byte(10,10,10)

proc ArrayTst()
begin
	ar(0) = 0
	ar(1) = 1
	ar(2) = 2
	ar(3) = 3
	ar(4) = 4
	ar(5) = 5

	arw(0) = 0
	arw(1) = 2
	arw(2) = 4
	arw(0).l = 0
	arw(0).h = 1
	arw(1).l = 2
	arw(1).h = 3
	arw(2).l = 4
	arw(2).h = 5

	a2(0,0) = 0
	a2(1,1) = 11
	a2(2,2) = 22
	a2(3,3) = 33
	a2(3,0) = 30
	a2(3,9) = 39

	ah = a(0,0,0)
	ah = a(0,0,1)
	ah = a(0,1,0)
	ah = es(a(1,0,0))

	ax = word[bx + &a]
endproc


////////////////////////////////


endmodule
