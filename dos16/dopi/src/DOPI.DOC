Ｐｉ（パイ）ローダ  ＤｏＰＩ	ver. 1.11



□  はじめに

  やなぎさわ氏作のＰｉ（パイ）フォーマットの画像ファイルをPC9801で表示する
プログラムです。ローダのみで、セーバ機能はありません。

  名前の由来は、ＰＣ９８ＤＯで作られたから、というモンです(^_-)
  読みは、ドゥパイ、か、ドピ、かな。まあ、読めそうな範囲で好みで呼んでやっ
てください。



□  長所・短所・制限など

  ・V30(186) 以上のCPU を積んだPC9801で動作します。8086 は不可です。

  ・256色Pi画像のロードがとりあえず、できます。
    ディザで１６色表示します。誤差拡散でモノクロ（セピア）１６階調とかもで
    きます。

  ・MAKI形式の常駐パレットに対応してます。てか、ないと不便です。ただし、常
    駐パレットの作成等は行えないので、別のツールで用意してください。

  ・横サイズは、８ドット単位でないといけません。そうでない画像は表示できま
    せん。

  ・Pi98で拡張された始点情報に対応してますが、始点の横座標は、８ドット単位
    でないといけません。

  ・640*400 よりも大きい画像を表示できます。表示しきれなかった部分はスクロ
    ールして表示できます。また、スクロールでは、上下左右を繋げてループする
    ことが可能です。

  ・上下左右反転表示ができます。もちろん640*400以上の画像でもOK.
  　縮小表示も可。

  ・使用メモリが多いです。表示できるサイズはメインメモリの空サイズに依存し
    ます。16色 640*400画像3 枚分位（640*1200とか1024*768とかもok.ただし256
    色ではその半分）のサイズはDOS3.3でも確保できるが、コプロセス起動で表示
    するとか常駐物(FEP等)がﾒｲﾝ･ﾒﾓﾘを圧迫するとかすると表示出来なくなる画像
    が増えること多し^^;  そのくせEMS 等には対応していない。

  ・裏VRAM を作業バッファとして使います。-lbu0 で裏バッファを使わないように
    できますが、そうすると 256 色をロードできません。

  ・２５６色画像のとき、ＰＣ３８６Ｍ／Ｐの２５６色画面、またはＨＦ(+)に表示
  　するオプションがある（ただし手抜き）。ＨＦ(+)表示ではTEKITO氏のFB.Cを使
  　わせていただいたので(感謝)、ＳＦで表示できる可能性あり。

  その他、機能についてはオプションの説明をみてください。



□  起動方法

usage: DoPI [-option(s)] file(s)...

  コマンドラインは前から順番に実行します。オプション、ファイルの順番に注意
してください。
たとえば、
    > dopi a.pi b.pi -k d.pi e.pi
とあれば、a.pi, b.pi ではキー入力待ちせず、d.pi, e.pi でのみキー入力待ちを
します。

  ファイル指定ではワイルド・カード機能があり、MS-DOSのものより拡張されて、
    *	  0文字以上の任意の文字列に一致
    ?	  任意の一文字に一致
    [..]  [ ] 内の文字列のどれか一文字に一致
    [^..] [^ ] 内の文字列以外の一文字に一致
          括弧内では 0-9 のように'-'による範囲指定も可
          また、括弧内では他のワイルドカード文字は機能しない
があります。
  また、パスの区切りとして \ だけでなく / も使えます。

  オプションは - ではじまる文字列です。 / はオプション指定としては使えませ
ん。



□  オプション

  [] 内は省略可能です。<>内は省略不可。
  大英字は数値を意味します。数字は '012'のように 0から始めと８進数になるの
  かもしれないので、気をつけませう。

-?
    ヘルプ

-a[N]
    表示をするとき、見栄をはります(^_^?
    N = 0 : この機能をオフ
    	1 : 2行おきに表示
    	2 : 4行おきに表示
    	3 : 縦スクロールして表示
    	4 : 3の逆方向で縦スクロールして表示
    	5 : パレットのトーン 0％から徐々にトーンをアップして表示
   3 〜 5 は -cp と組み合せてみるのもいいかもしれません。
   1,2 はイマイチよくありませんでした。そのうち削除かな...

-b filename
    -b の直後に置かれたファイルを裏画面(VRAM) に表示（展開）します。
    -b とfilenameの間には空白が必要です。
    -b の指定されたファイルでは、-k, -lbオプションは無視されます。

-c[0|1]
    表示に先だって毎回画面を消去します。
    -c1 ならそのとき１度だけ画面を消去します。
    -c0 なら、この機能をオフにします。

    ファイル名なしで起動したばあい、画面消去が行えます。
    （-lb が指定されていれば、裏画面も）

-cp
    表示に先だって毎回画面を消去しますが、消去の前にパレットのトーンを０％
    まで徐々にトーン・ダウンします。

-h
    ２５６色画像をフレーム・バッファのＨＦに表示するようになります。

-k[0|1]
    表示毎にキー入力待ちになります。使えるキーについては、別記。
    -k1 なら、直後のファイルのみキー入力待ちになります。
    -k0 なら、この機能をオフにします。

-k? -?k
    キー入力時に使えるキーを表示します。

-kg[N]
    現在のVRAMの内容を内部のバッファに取り込んでキー入力待ちになります。
    N の値(1〜6)により、以下のサイズを取り込みます。
        1:640*400 2:640*800 3:1280*400 4:400*640 5:800*640 6:400*1280
    4〜6 は、画面を右９０度回転したものです。

    ファイル名を指定しなくても、利用できます。
    が、常駐パレットのないばあいはエラーになります。
    ２画面画像では、-lbの指定を忘れると不幸です。

-lb[N]
    裏画面を利用するかどうかを指定します。
    指定されれば、640*400 以上のサイズの画像ではみ出した部分を裏画面に表示
  します。
    縦のはみ出しを優先しますが、値 N で変更可能です。
    -lb0 なら、この機能をオフ。
    -lb1 なら、縦優先。
    -lb2 なら、横優先。

    画象を表示する画面上の始点が(0,0) 以外のばあいは、裏画面への表示は行い
  ません。
    裏画面はスクロールでは利用されないので、スクロールを行うと、表と裏が続
  かなくなります。

-lbu[0|1]
    -lbuの指定のないときは -lbu1 が指定されています。
    -lbu1 で２５６色画像をロード可能となり、作業用のバッファとして、裏VRAM
  を使用します。
    また、256 色に限らず、裏ＶＲＡＭの 0xB800:0000から 32Kバイトを入力バッ
  ファとして使用します（そのぶん、画像用の内部バッファを広く出来ます^｡^） 
    なお、このオプションは、コマンドラインでの位置に関わらず、最初に評価さ
  れます（途中で変更することはできません）。
    -lbu0 だと裏VRAM にバッファをとりませんが、256色が表示できなくなります。

-lc[C] filename
    直後のファイル（画像）の色番号C を透明扱いにして、現在の画面に合成して
  表示します。C は 0〜15。C 省略は 0.
    合成は表示の段階で行うので、内部のバッファに合成したものを保持していな
  いので、スクロールや再表示等が行われると、合成が崩れてしまいます。

-lc-
    Piヘッダの拡張部に埋め込まれた透明色を無視します。

-ll[0]
    キー入力待ちのスクロールで範囲を越えたばあい、ループします（反対側へ続
    きます）。
    -ll0 でこの機能をオフにします。

-lr
    縮小表示(１／４)します。始点は無視され(0,0)となります。
    -lr0 が指定されるとこの機能はオフになります。
    キー入力待ちでは、CR,SPC で次へ、ESC で強制終了できるのみで、他の機能
    は使えません。

-lv[N][,M]
    終了時のパレットのトーンをN％(N:0〜200)にします。
    N が省略されると50％が指定されたことになります。
    M が指定されると、-v,-lv での N 省略時の50％の代わりに M％にします。
    この M の値は環境変数 DOPI で設定しませう（でないと、意味ないもの^_-）。
    （M を指定するときは必ず N を設定してください）

-lvf
    終了時にグラフィック画面の表示をオフにします。

-ly<0-2>
    スクロール方法を指定します。
    -ly0ならソフトウェア転送で行い、-ly1 -ly2 ならＧＤＣを利用して行います。
    ＧＤＣ利用では、400 ラインを越える画像はスクロールして下まで見せます。
    さらに -ly1 は上に戻っていきます。
    -ly 省略時は-ly1です。
    また、-ly が指定されていないとき(起動時)は、-ly1 が指定されます。

-o[X][,Y]
-oa[X][,Y]
    画像を表示する画面上の位置を指定します。
    -o なら、画像データの始点の値からの相対位置になります。
    -oa なら、画像データの始点の値は無視します。
    指定できる値は、
      X:-1800位〜632 かつ 8ドット単位
      Y:-1800位〜399
  で、X,Y の省略値はともに 0です。
    値の後ろに 'o'を付けるとバイト単位で指定したことになります。たとえば、
  -o11o,-4 なら -o88,-4、 -o-8,50o なら -o-8,400 というふうになります。
    負の値のばあい、負の部分は表示されず 0以上になる部分からが表示されます。
    絵が画面に表示されないような負の座標を指定すると、画像の右端（または底
  辺）が画面の右端（または底辺）なるような始点の座標が指定されたことになり
  ます。
    また、そのような負の値のかわりに'_' を指定できます。たとえば画像を、左
  隅底辺にくっつけて表示したいばあいは -oa0,_ とすれば、画像サイズにかかわ
  りなく、指定できます。

-t
    ファイル名、コメントを表示しません。

-v[N]
    表示毎にパレットのトーンをN％(N:0〜200)にします。
    N が省略されると50％が指定されたことになります（ただし50%は-lvで変更可）。

    ファイル名なしで起動したばあい、常駐パレットのトーンを変更できます。

-w[N]
    キー入力待ち無しのときに、画像毎に画像表示後 Nだけ待ってから、次の画像
  を読み込みます。
    もし、この待ち時間の間に、ESC を押すと終了、 SPC,CR なら待つのをやめて
  次の画像に移ります。
    N の値は正数値ですが、単位は？です。一応、おおざっぱに機種間で同じくら
  いの時間を待つようにしたつもりですが、嘘になるかもしれません。機種ごとに
  試してみてください^^;
    まあ、画像展開に時間がかかるので、遅い機種を使っていると -w の必要はな
  かいのですが^^; で、実行環境が 8086(V30)のときは、N の値を半分にします。

-ws[N][,M]
    スクロール・スピードを遅くします。
    N が指定されると、キー入力待ちでないときの400ライン以上の画像の表示での
  スクロールを遅くします。
    M は キー入力でのスクロールを遅くします。
    N,M は 正数値ですが、単位は？です。また、N と M でも単位が違います。
    指定する値は、大きくても１０〜２０の値になるとおもいます。
    実行環境が 8086(V30) のときは、このオプションは無視します。

-wh
    実行環境が 8086(V30) であっても、-w, -ws をそのまま指定どおりに扱います。
    -w, -ws よりも先に指定しないと意味ありません^^;
    なお、-wh なら、強制的に 8086(V30) 扱いにします。

@FILE
    ファイル FILE よりオプション、ファイル名を収得します。
    タブ,改行は空白として扱います。
    このファイル中では、ファイル名のワイルドカード機能は使えません。
    あと、'#' を使うとその行末までコメントとし, 空白として扱います。

注意：基本的にコマンドラインの前から順に解析しますが、-?, -k?,-??, -lbu -wh
      は例外で、先に評価して実行します。



□  環境変数

  環境変数 DOPI にオプション文字列を設定しとくと、起動時に参照しますので、
頻用するオプションを設定しときませう。



□  キー入力時に使えるキー

    おもにテンキーとその周辺に集中するように配置しています。

ESC
    終了します。
    このとき、ＧＤＣスクロール等でVRAM の表示が連続になっていないばあいは、
  連続にしてから終了します。

HELP
    ヘルプを表示します。
    表示していても、他のキーを受け付けます。
    消すには もう一度HELPを押すか TAB を押します。

TAB =
    ヘッダ情報を表示します。
    コメントがあるばあいは、次に押すと、コメントを表示します。
    表示していても、他のキーを受け付けます。
    消すには もう一度押してください。

CR SPC
    次のファイル(画像) に移ります。
    VRAM 状態を戻さずに移るので、CR,SPC を押して終了すると、絵が崩れてしま
  うばあいがあります。

↑↓←→
    画面に表示できなかった部分をスクロールします。
    スクロールは画面範囲を越える画像で始点が(0,0)のときのみ可能です。
    縦は１ドット、横は１６ドット単位でスクロールします。

0〜6
    スクロールの移動量を指定します。
    ＧＤＣスクロールでも影響しますが、おもにソフトウェア転送でのスクロール
  のためにあります。値は、
    0:1ﾄﾞｯﾄ 1:2ﾄﾞｯﾄ 2:4ﾄﾞｯﾄ 3:8ﾄﾞｯﾄ 4:16ﾄﾞｯﾄ 5:32ﾄﾞｯﾄ  6:64ﾄﾞｯﾄ
  となります。起動時は 4:16ドットが設定されています。
    横は、ソフトウェア転送なら、８ドット、ＧＤＣなら１６ドットが最小の値な
  ので、それ未満の値ならば切り上げられます。

INS
    パレットのトーンを10％アップさせます(0-200%)。

DEL
    パレットのトーンを10％ダウンさせます(0-200%)。

HOME/CLR
    画面を消去し、始点を(0,0)にして再表示します。
    -lbが指定されていれば、はみ出す部分を裏画面に表示します。
    なお、再表示を行うとき VRAM を連続にしています。

-
    そのままの座標で再表示します(-lb指定時は裏画面も描き直す)

/
    画像が画面丁度か範囲を越える画像なら、スクロールで端まできたとき、反対
  側を続けて表示します（切り替）（-llオプション）。

,
    縮小表示（１／４）します。
    スクロール等は行えず、キー入力待ちになるので、何かキーを押せば戻ります。
    横が奇数バイトのばあい、余計なものが表示されてしまいますが、ガマンしま
  せう。

\
    スクロール方法を切替ます（GDC利用/ｿﾌﾄｳｪｱ転送）
    ソフトウェア転送→ＧＤＣに変更するとき、横は移動量の制限より、１バイト
  ずれて表示されるばあいがあります。
    あと、オプションの -ly を参照してください。

[
    上下反転します。
    内部バッファに行い、始点を(0,0)にして再表示を行っています。
    (-lb指定時は裏画面も描き直す)

]
    左右反転します。
    内部バッファに行い、始点を(0,0)にして再表示を行っています。
    (-lb指定時は裏画面も描き直す)

@
    現在のVRAM を取り込んで表示します（-kg オプション）。
    @ を押すと 1〜6 のキー入力待ちになるので、取り込むサイズを指定してくだ
  さい。4〜6 は右９０度回転します。
    
        1:640*400 2:640*800 3:1280*400 4:400*640 5:800*640 6:400*1280
    
    おもに、これは、画面を右９０度回転するためにあります.
    （２画面画像を取り込むときは、-lb を指定してないと不幸です）

^
    ４００ライン画面の時、裏画面を見ます。
    キー入力待ちになり、何かキーを押せば表に戻りますが、ＧＤＣスクロールの
  あとだと、画面がくずれていたりしますが、スクロールや再表示を行えば元に戻
  ります。
   


□  スクロールについて

  スクロールできるのは、画面をはみ出し、かつ、画面上の始点が(0,0) のものだ
けです。スクロールできるはずの画像なのにできない、ってばあいは始点が (0,0)
でないというばあいでしょう。こういうときは、CLR キーを押してやりませう。ま
たは、起動時に、-oa として、強制 的に始点を(0,0) にしとくのもいいかも。

  ＧＤＣを利用したほうがなめらかにスクロールしますが、VRAMの状態がくずれま
すし、１ドットごとに移動させたりするのは不可です。細かく移動したい場合はソ
フトウェア転送のほうを指定しませう。

  なお、画面が200ラインのばあいはいまのところ、ＧＤＣスクロールは行えず、ソ
フトウェア転送になります。

  縦 400ライン以上の画像のばあい、ＧＤＣ利用のばあいはスクロールして下まで
表示しますが、そうでないばあいはスクロールしません。

  スクロールははみ出した方向（縦横）のみ可能ですが、片方ははみ出し片方は短
いばあいは、空いてる部分にごみが表示されます。とくに、ループしているときは。
  また、上下・左右反転やその位置での再表示のばあいも余ってるところは変なも
んがあらわれます（裏画面も）。ちょっとうっとうしいかもしれませんが、ガマン
してね。
  縦400以上の画像は最初にスクロールしますが、そのとき横サイズが640以上ある
とゴミが残ります。このときは、再表示(CLRキー)をすればなおるでせう。



□  裏画面について

  オプション -b,-lb,-lbu1が指定されると裏VRAM への書き込がおこなわれます。
無指定で -lbu1 が指定されているので、-lbu0を指定しない限り必ず裏vram を使う
ことになります。
  640*400以上の画像で、-lcでの合成などや９０度右回転を行う場合、-lb を忘れ
てると哀しいかもしれません。

  -lb が指定されていても、スクロールした結果は裏画面には反映されません。た
だし、キー入力で再表示が実行されるキー（再表示や反転、縮小etc ）を使用すれ
ば裏画面も表に合わせてかきかえられます。



□  ２００ライン画面について

  縦横のドット比が 2:1 以上の画像は、画面を２００ラインにして表示していま
す。
  ２００ライン画面は手抜き・不備があり、ＧＤＣスクロールができなかったり
移動量が調整されなかったりと、２００ラインに対応していない機能があります。



□  始点について

  元のＰｉフォーマットでは始点情報はサポートされてませんが、Ｐｉ９８におい
てセーバ機種依存領域に拡張されているので、それをサポートしています。
  単純に、機種依存領域のサイズが 5バイト以上ならセーバ機種名によらず所定の
位置の値をそのまま用いているので、具合の悪いばあいもあるかもしれません。そ
のばあいは、コマンドラインで -oa で始点を指定して表示してください。



□  使用メモリの量

  DoPI は画像をメインメモリにとったバッファに展開します。
  大きい画像では読み込めるだけ読み込んで先頭からｎ行を表示します。
  そのバッファは起動時に、おおざっぱに言って、空きメモリ−160KByte、くら
いを確保しています。
  展開する画像（１６色）は、
      （画像の横ドット数／２）×（縦ドット数＋２）バイト
必要としますので、メインメモリに空きメモリがないばあいは表示できません。
ちなみに 640*400の画像なら 126K+160K バイトくらい、640*800 なら 251K+160K
バイトくらいです。
  ２５６色ではその倍のメモリが必要です。



□　@FILE について

  @ で指定したファイル中では、オプション、ファイル名、および #で始まるコメ
ントが書けますが、それ以外に以下のような命令があります。ただし実験的に付け
てみただけなので将来外してしまう確率大なので、特化した用途以外では使わない
ほうが無難でしょう。

@p 文字列
@d 文字列
    文字列を画面に表示します。
    @p は文字列表示後改行し、@d はしません。
    @p,@d と文字列の間には空白かタブが 1文字のみ必要です。その空白、タブの
    次の文字(たとえ空白であっても)からが表示されます。
    ただし、文字列が '文字列' または "文字列" なら '',""の中身を表示します。
    ' か " 以外で始まる文字列のばあいは改行の前までを対象にします。
    ' や " で囲まれた中に改行はおかないでください。

@i
    テキスト画面をクリアします。

@l X Y
    表示位置を(X,Y)にします。X は 1 〜 80, Y は 1 〜 25 の値です。

@c C
    C は色番号で、
      0:黒  1:青  2:赤  3:紫  4:緑  5:水色  6:黄  7:白
    です。
    また、アトビュテートとして、
      0x100: ブリンク
      0x200: 反転
      0x400: アンダーライン
    があり、色番号に足して指定してください（@c 0x406 とか @c 0x307 とか）

@k
    何かキーが押されるまで待ちます。

@w N
    N の時間だけ待ちます。
    -w[N] と同様、待ち時間の間に、ESC を押すと終了、 SPC,CR なら待つのをや
    めて次の画像に移ります。
    値の単位は機種に依存しますが、一応、うまくいけば、どの機種でもだいたい
    同じ時間だけ待つはずです（-w[N] と同じ単位です）


  X,Y,C,N 等の値は10進数の他に、0xで始まれば16進数が指定できます。また、 0
から始まれば 8進数として扱われます。
　パラメータの値はチェックしてません。暴走するとは思えませんが、正しい値を
指定しませう。

  @命令とそのパラメータや-オプションの区切りは空白(タブ)で、複数個並んでい
てかまいません。例外として、@p,@d と出力する文字列の間の区切りは空白１個で
ないといけません。
  改行は空白扱いです。が、@p,@d で 'や " を使わないばあいの文字列の終りと
して使われます.
  もちろん #コメントも空白あつかいです。


  @ 命令はちょっとした紙芝居程度には使えるかもしれません。 が、if 文やルー
プ文、変数がないので、気のきいたことは無理です。素直にバッチファイルなどを
利用したほうがたほうがいいでしょうね...



□  HF対応、PC386M/P 対応について

  HF(+)対応は、かんちゃん☆ﾐ師の要望＆変更ソースにより２５６色画像をＨＦ
に表示できるようになりました。

　PC386M/P 対応は、ぼくが PC386Mユーザになったので（笑）しました。

　HF対応には TEKITO氏作の FB.C を使わせていただいたので（感謝）、ひょっ
とするとＳＦでも動く可能性があったりします（どなたか試してやって下さい^^;
でもって結果教えて欲しい...）（と. どうやら動くらしいです^^）

ぼく自身はフレーム・バッファを持ってないので、自分ではチェックしていま
せん。

と、この２５６表示、対応といっても本格的な対応でなくて、出来ないよりマシ、
程度の対応です。

オプション -h を指定して、256色画像を表示するとＨＦに表示するようにな
り、-lmm で PC386M/P 対応になります。１６色画像は本体VRAMに表示します。

  -h,-lmm指定で２５６色画像のとき、本体VRAMやパレットに関するオプション
は無効です（-v,-lv,-a,-b,-lb,-lc,-lr,-lm,-cp,-ll,-ly等）

また、-k で有効なキーも
	CR,SPC  　次の画像
	ESC	　強制終了
	↑↓←→  64ドット単位で表示位置をずらす
	CLR	  再表示
	'0'〜'8'  カーソル移動量をキーに応じて1,2,4,8,16,32,64,128,256
		  に切り替える
のみです。カーソル・キーはスムース・スクロールには程遠い代物ですが、
まあ、ないよりはマシかな、っと。

画面消去のとき(-c時等),　現在の表示がどちらかに関わらず本来のGVRAMと
HFの両方を消去します。

-lvf オプション（終了時画面表示オフ）は、ＨＦでは -lv でトーン・ダウ
ンというわけには行かないので用意しました。



□  おわりに

  プログラムは TC(++ v1.01) と　自作アセンブラ・プリプロセッサと Allowsoft
Asembler v1.00d を用いて作成されています。

  Ｐｉフォーマット作者の柳沢氏に連絡したところ、Ｐi フォーマットの移植条件
は撤回されており自由に発表してかまわない、とのことでしたので、フリーソフト
ウェア（FSW）として配布することにします。

  パソ通での非営利配布なら作者に連絡不要で自由にしてください（ディスク配布
とか営利が絡むとかなら連絡(相談)ください、と）。

もちろん、作者はなんの義務も責任も負いません。まあ FSWの常識の範囲で扱って
くださいな。もちろん、転載連絡や感想をいただけるとうれしいですし、バグ連絡
もありがたいので、できればお願いします。


						てんか☆(きたむら まさし）
						NIFTY		  NBB00541
						二の次倶楽部	　#31
