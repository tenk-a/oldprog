ＴＬＣｕｔ v1.03
	手抜き（タイニー）ログ・カッター



■  なにをするものか...

    定義ファイルに従って指定されたログファイルを分割します。

    入力したログ・ファイルの各行の行頭と定義ファイルに設定されたいく
  つかの比較文字列とを比較し一致する行があらわれれば、その比較文字列
  と一緒に定義されたファイル名に出力先をかえる、だけのものです。
    比較文字列の指定で正規表現（やそれに類するもの）なんて気のきいた
  ものはなく単純に比較するだけで、でもって各行の行頭としか比較できな
  いという、手抜きな代物です^^;

    切取り範囲の終了は次の切取りの開始ということで、基本的に、いらな
  い行とかも削除するのでなく、専用のファイルに掃き出すという方針です
  （ごみに必要なものが交じることはありますし...）。

    名前に”手抜き”が付いているとおり、定義ファイルで切りだしの指定
  方法は単純で細かい設定はできませんが、そのぶん楽(？)に指定できます。
  （類型の定義ができんので、実は、やっぱし、めんどくさい^^;）
    Niftyなんかは無茶でせうが、草の根のネットなら結構いけそうです。
  （クックとか WWIV とかなら、たぶん）

    各メッセージの先頭行の行頭にボードタイトルが付くようになっていれ
  ば（または各ボード（会議室）の先頭に固有のボードタイトルがあれば）、
  そのタイトルで判別してボードごとにファイルに切り分けます。
  うまく判定するメッセージがあればメールやプロフィール、ＦＳＷ一覧等
  もきり分けられるでしょう。

    が、判定に使えそうな文字列が行頭にないばあいは、このプログラムで
  はお手上げです。awk や led 等のちゃんとしたツールを使いませう(^_^;



■  つかいかた

	usage> tlcut [-opts] tlcfile[.tlc] logfile(s)

    tlcfile[.tlc] はログ分割のための定義ファイルで必ず指定する必要が
  あります。定義ファイルはネットごとに作成しておきませう。指定された
  ファイル名で見つからないばあいは、tlcut.exe のあるディレクトリも探
  します。

    logfileは切り分けようとするログ・ファイルで、複数指定できます。
　  ファイル指定ではワイルド・カード機能があり、MS-DOSのものより拡張
  されて、

　　*	　0文字以上の任意の文字列に一致
　　?	　任意の一文字に一致
　　[..]　[ ] 内の文字列のどれか一文字に一致
　　[^..] [^ ] 内の文字列以外の一文字に一致
　　	  括弧内では 0-9 のように'-'による範囲指定も可
　　	  また、括弧内では他のワイルドカード文字は機能しない

  があります。

    また、ワイルド・カード指定したばあいは、その指定に一致するファイ
  ル名をソートして順に行ないます。通信ソフトの作成するログファイル名
  に日付が付くようになっていると（例えば 1月24日のログならxxx0124.log
  というぐあいに）、日付の順にファイルを処理することになります。

  例えば、XXX というネットのログが XXX で始まり日付が続く名前なら、
	tlcut xxx*.log
  で日付順に処理します。

　  あと、ファイル指定ではパスの区切りとして \ だけでなく / も使えま
  す。

　  オプションは - ではじまる文字列です。 / はオプション指定としては
  使えません。
    オプションはファイル名の前後にあってもよく、ファイル入力前に処理
  します。



■  オプション

  -oDIR     出力先ディレクトリ をDIR にします。
	    このとき tlcfile 内の指令 o は無視します。

  -v[w]     処理中の入力ファイル名を表示します。
	    -vwだと出力先も表示します。




■  定義(tlc)ファイル


    定義ファイルでの１行でだいたい 500バイト以内でないといけません。
  また、トークンは、空白(SPC,TAB)で区切ります。

    行頭の空白を読みとばした最初の文字が指令となり、その文字として

	#  *  m  m+  +  d  o  end

  があり、これら以外の文字(列)で始まる行があるとエラーになります。
  （アルファベットは小文字でないといけません）

    さて指令は８個ありますが、ログの切り分けに最低必要な指令は、

	m  *  #

  だけで、# はコメントなので、m * の２つの指定方法がわかればログの切
  りだしは行なえます。



◎  # コメント

    コメントは # で始まり改行までを範囲とします。行等以外にある #
  はコメントとしては扱わないので気を付けてください。



◎  指令 m

    "はじめに"で説明したように、こいつは設定された比較文字列と入力し
  た行の行頭を比較して一致すれば出力を替える、という代物です。

    m はその比較文字列と対応する出力先ファイルを指定する指令で、

	m    出力先ファイル名	 比較文字列

  というふうに指定します。もちろん、必要なだけ複数個指定できます。

    比較文字列までの区切りは空白(SPC,TAB) で、比較文字列は基本的には
  空白以外の文字で始まり改行の直前までの文字（空白含む）をそれとしま
  す。もちろん、空白で始まる文字列を設定したりコントロール・コードを
  設定する方法もあります。 そのかわり " が特別な扱いになりますが(^_^;

    もちろん複数の  m 指定で出力先ファイル名に同じものがあってもかま
  いません。

    判定は１行かつ行頭からを比較するだけなので、メッセージの内容にヘ
  ッダと同じ文字列から始まる行があると間違って切り分けてしまいます。
  まあ普通はそんなことする人はいないだろう、という前提です。



◎  指令 * と 不要行出力ファイルの指定について

    出力先ファイル名の特別なものとして * があります。これは、

	m	*	判定文字列

  のように指定し、不要な行や切り分けそこなった行などを出力するファイ
  ルをあらわします。


    この * の実際のファイル名を指定する指令として指令 * があります。
  これは、

	*	出力先ファイル名

  のように指定します。たとえば

	*	net_gomi.log

  のように設定します。

    別に * をつかわずに特定のファイルを不要行出力専用としてしまえば
  同じになりますが、* のファイルについては切り分けのフィイルとは別に
  オープンしてバッファを持っており、* を使ったほうがディスク・アクセ
  スが減り速度が上がるでせう（つもりだけかも^^;）。



◎  指令 o と<出力先ファイル名>について

    出力先ファイル名ですが、基本的にはディレクトリ名を指定しません。
  指令 o またはコマンドライン・オプション-o を指定することにより出力
  先ディレクトリを設定できます。指令 o は

	o  出力先ディレクトリ名

  と指定します。
    ただし、コマンドラインで-oDIR が指定されるとそちらを優先します。
  カレント・ディレクトリを指定したいばあいは . を指定します。



◎  指令 d  と 出力先ファイル指定での'-'

    基本的には不要行は * のファイルに出力する方針ですが、 ファイルの
  切り替えの判定のついでに、その行がまず不要行なのでわざわざ出力する
  までもない、ってときに mの代わりに指定できます。削除されるのは判定
  に用いられた行だけであり、指定された出力先ファイルに出力が切り替る
  のは m と代わりません。

  　ただし、出力先ファイル名として '-'を指定することにより、出力先フ
  ァイルの切り替えを行なわないようにできます。
　つまり
	d	-	"判定文字列"
  で"判定文字列"で始まる行の削除のみを行なえます。



◎  指令 m+ と 指令 +

    ホストにもよりますが、ヘッダのスタイルよっては各メッセージの間が
  詰まって見づらいばあいがあります（ヘッダとメッセージ本体との間は２、
  ３行空いているのにメーッセージの最後と次のヘッダの間は１行しかあい
  てないとか、ね）。
    各メッセージの先頭にボード・タイトルの付いているメッセージならば、
  切り分けのときにそのメッセージを出力する前に改行を２、３個出力する
  ために指令 m+と指令 + があります。改行に限らず文字列を出力できます。
    指令 + で、

	+	出力文字列

  として出力する文字列を設定しておき、 指令 m の代わりに m+ を指定す
  れば、切り分けたときに該当行を出力する直前に + で設定した文字列を
  出力します。

    出力文字列としてたとえば改行３つを出力したいばあいは

	+	"\n\n\n"

  のようにします。なお、出力文字列の指定の詳しくは後述します。



◎  end

  この行で定義ファイルの読み込みを終了します。



◎  出力文字列, 判定文字列の指定について

    + の出力文字列や m,m+,d の判定文字列は、空白以外の文字列で始まり、
  行末の改行の直前までをその文字列とします。
    空白も判定文字になり、とくに行末の空白の有無には注意してください。

    文字列の先頭に空白を置きたいばあいや、改行を出力したいばあいは、
  " で文字列を囲むことによって行なえます。囲むのに用いた "は取り除か
  れるので、" の扱いは特別になります。また、" で囲まれた範囲の外に文
  字列があってもかまいません。
    たとえば、空白２文字で始まるように指定したいばあいは
	"  文字列"
  または
	"  "文字列
  のように指定できます。


    " で囲まれた範囲では  \ がＣ言語と同じようなエスケープ文字として
  機能します。使えるエスケープ文字は以下のもので、\ の後ろに他の文字
  を指定した場合の動作は不定なので、そのようなことはしないでください。

	\n	改行
	\t	タブ
	\f	フォーム・フィールド（改項）
	\a	アラーム（ビープ）
	\e	ESC
	\"	" 自身
	\\	\ 自身
	\xHH	１６進数で文字コードを指定。

    このうち \xHH はＣとは若干違い１６進文字列が続く限り取込み下位２
  バイトが有効で 0x100 以上なら2バイト、0xff以下なら 1バイト文字とし
  て扱われます。



■  たわごと

    まず、定義ファイルを作らんことには使えません(^^;
    定義方法が単純でも、この作業はやっぱりめんどくさいです。いや、単
  純ゆえワイルド・カードでの類型の判定などできないので、判定文字列を
  必要なだけすべて設定しなけばならず、エディタでログと作成する定義フ
  ァイルを開けてログをにらめっこ、必要なものがあれば定義ファイルにコ
  ピー... 楽といえば楽なんですが^^;
    もとになるログ・ファイルは、あらかじめネットでひととうり表示した
  ものを用意しませう。すべてのボード一覧とメッセージのヘッダの様子、
  メッセージの終了を判別するための文字列が最低必要かな。メールもね。

    切り分けられた各ファイルの状態については対策を講じていません。
  とりあえず、ボードごとにメッセージを分けられればいいや、と思ってる
  ので、わけられたものに不要な行があってもかまわない、同じメッセージ
  が２つあれば２つあるままだし、うっかりログ分割する順番を間違えて日
  付のならばなくてもそのままだし、ね。

    まあ、ログ読み捨てにしてれば、こんなもん、いらんのだけど^^;
  以前はぼくも読み捨てだったのだけど、ハードディスク使うようになって
  からなんか残すようになって、でもごちゃごちゃで見返す気はおきんので、
  少しでも改善しよう、ってわけで。と、メール切り出せたのはよかったけ
  ど、他は切り分けても読み返さないな、と（気が向いたら削除だろな）。

    ログの切りわけなら、FSW で led とか awk を使えればすぐなのかもし
  れないけど、玉砕して^^; えい、考えるのめんどくさいからＣで作っちゃ
  え、で、１つのネット用に今の定義ファイルの情報をソース内にもつ奴を
  作って使ってたのだけど、他のネットでも同じ判定方法でよさそうなので
  判定文字列をファイルから読み込むようにして今のようになったのね。



■  たわごと２

　うっと。
　作ったときはすぐさまアップするつもりだったのだけど、なんかタイミン
グ一度はずしたら、まあ、たいしたもんでもないし、いいや、で、ほったら
かしにして、でもって、やなさん氏作のログページャ／カッター NIFP が、
スクリプト・ファイルを書けば NIF以外にも対応するようになってからは、
それを利用すればいいや、で、自分でさえあまし使わないようになったのだ
けど、たあいないものでも、やはり折角作ったものだし、ディスクで腐らせ
とくにしてもほんとに腐ってリードエラーが出ると結構悲しいものなので、
バックアップの意味でアップロードすることにしたのでした^^;
　だもんで、バージョン・アップとかはしない予定っす（虫さんがいたらす
るかもだけど）.
　じつんとこ、もっとまともなログ・カッター（ページャ）を作ろうかと思
ってたのだけど、NIFPのスクリプトで間にあってるので、計画倒れになった
のね^^;（他に作ってるものあるし...）



■  おわりに

    このプログラムはＴＣ(++ v1.01)でコンパイルされています。
  ソースは、ファイルのワイルドカード機能がアセンブラになっていますが
  それ以外はＴＣには依存していないと思うので、DOS のＣならちょっとの
  変更で再コンパイルできるように思います(関数の引数の受渡しはQC,MSC
  も同じだったと思うのでヒョッとしたらうまくいくかも)。

    フリーソフトウェアとします。パソ通での非営利の配布ならば連絡不要
  でしていただいてかまいません。それ以外での不特定多数への配布につい
  てはとりあえず事前に連絡してください。
  改造物は原作者名、改造者名を省かず、また作者を含め第３者のプログラ
  ミングの邪魔をせず（改造部分で他者の利用・流通・改造等を妨げたりし
  ない）作者と同じ条件であれば配布していただいてかまいません。ルーチ
  ンの引用・流用も第三者のプログラミングを邪魔しないのであれば、営利
  物に利用していただいてもかまいません。

    あと、例によって無保証です。作者はなんの義務も責任も負いません。


					てんかﾐ☆（きたむらまさし）
					Nifty			NBB00541
	                                贋作倶楽部		#31
