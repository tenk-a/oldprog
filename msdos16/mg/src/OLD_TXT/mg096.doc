ＭＧ v0.96

	16色256色 MAG,Pi,BMP(無圧縮),TIFF(無圧縮),B1,FRM,BLK,DJPコンバータ



■  はじめに

  pimag(pi2mag,mag2pi), pibmp(pi2bmp,bmp2pi,bmpsv),brge2pi,dopisv
を廃止し、これらを一体化&拡張したプログラムです。
  DOS汎用で、16色,256色の MAG,Pi,BMP(無圧縮),TIFF(無圧縮),B1,等の
画像ファイルを他のフォーマットに変換できます（別に同じフォーマット
どうしでもいいけど^_-）.
  また、PC9801依存な機能ですが、PC98の 640*800or1280*400指定可能な
16色画面セーバでもあり, PC386Mの256色セーバでもあります.

	入力ﾌｫｰﾏｯﾄ	       出力ﾌｫｰﾏｯﾄ

	MAG            +--+    MAG
	PI             |  |    PI
	BMP(無圧縮)    |  |    BMP(無圧縮)
	TIFF(無圧縮)   |  |    TIFF(無圧縮)
	DJP(256色)  -->|mg|--> DJP(256色,24ﾋﾞｯﾄ色)
	BLK,FRM        |  |    BLK,FRM
	B1(+R1+G1+E1)  |  |    B1(+R1+G1+E1)
	               |  |    RGB,Q0
	PC9801のVRAM   +--+    (PC9801のVRAM)

  展開・圧縮を自前で行います。ただし、186(V30)以降のCPUでないといけ
ません。



■  使いかた

  1) mg  .<OFMT>        [-ｵﾌﾟｼｮﾝ･･･] 入力ﾌｧｲﾙ名･･･
  2) mg  .<IFMT>.<OFMT> [-ｵﾌﾟｼｮﾝ･･･] 入力ﾌｧｲﾙ名･･･
    IFMT -- 入力画像ﾌｫｰﾏｯﾄ  mag pi bmp tif djp blk b1 frm
    OFMT -- 出力画像ﾌｫｰﾏｯﾄ  mag pi bmp tif djp blk b1 frm rgb q0

  指定例:
    1) mg .PI  *.tif *.bmp    ｶﾚﾝﾄﾃﾞｨﾚｸﾄﾘのtifとbmpﾌｧｲﾙを piに変換
    2) mg .BMP.MAG  *         ｶﾚﾝﾄ･ﾃﾞｨﾚｸﾄﾘの BMPﾌｧｲﾙ を mag に変換


  画像フォーマット指定、オプション、ファイル名の順番はこの通りでな
くても（交ざっていても）かまいません。が、画像フォーマット指定は必
ず一つのみ指定される必要があります。
  オプション解析は変換を行うより先に行います。

  画像ファイルを入力し、指定されたフォーマットに変換して出力します。
　出力ファイルは入力ファイル名の拡張子を出力フォーマット名にして、
カレント・ディレクトリに出力します。
~~~~~~~~~~~~~~~~~~~~~~
  見てのとおりフォーマットの指定方法は２通りあり、1)のばあいは入力
フォーマットはファイル名の拡張子で判別し、複数のフォーマットを一括
して一つのフォーマットに変換することができます。このばあい、正しい
拡張子を必ず指定する必要があります。

  2)のばあいは入力フォーマットも一緒に指定し、入力ファイルの拡張子
がなんであろうとそのフォーマットとして入力します。拡張子が無指定の
場合は入力フォーマットの拡張子が付加されます（強制的に拡張子を付け
替えるわけではりません）。

  入力フォーマット、出力フォーマットに同じものを指定することができ
ます（が、現在 .pi.pi(pi->pi)変換は誤変換してしまいます）。

  出力先に同名ファイルがあったばあいは、その同名ファイルを.bakファ
イルにrenameしてから出力します（実際にはまず、テンポラリ・ファイル
に出力して終了後 rename しています）。
  すでに .bak ファイルがあった場合はその.bakファイルは削除してから
変名します。
  もし、mg .pi file1.bmp file1.mag file1.tifのように、拡張子が違う
のみのファイルを複数変換したばあいは、どの画像が最終的に残るかは不
定で、また、.bak ファイルも一つしか残らないので注意してください。


  ファイル指定ではワイルド・カード機能が使えます。MS-DOSのものより
拡張されて、

    *	  0文字以上の任意の文字列に一致
    ?	  任意の一文字に一致
    [..]  [ ] 内の文字列のどれか一文字に一致
    [^..] [^ ] 内の文字列以外の一文字に一致
          括弧内では 0-9 のように'-'による範囲指定も可
          また、括弧内では他のワイルドカード文字は機能しない

があります。
  また、-で始まるオプション文字列で、" や ' で "文字列" のように
文字列を囲むと空白等を含めた指定ができます（-suや-sm向きの機能）。
ただし、"" や '' のように文字列を含まずに二つ並べた場合は、" や ' 
一文字が指定されたことになります。



■  コマンドライン・オプション

  オプションはファイル名の前後にあってかまいません。
  オプション開始文字は'-'のみで'/'は使えません。そのかわり、パスの
区切りに'\'だけでなく'/'が指定できます。
  オプションで','で区切って指定する場合、','のかわりに':'を使うこと
ができます（-s や -sr等）. また同じく区切りに '='を指定する場合も':'
で代用できます（これは、バッチファイル対策）


  -?[N]     ﾍﾙﾌﾟ表示. Nは[more]の間隔(行数). -?0で[more]なし
  -2        ﾄﾞｯﾄ縦横比を2:1にする. B1,FRM入力は640*200ﾗｲﾝ画像扱い
  -c        -98 指定時、画像表示前に毎回VRAM消去
  -d[-]     入力ﾌｧｲﾙの日付をｺﾋﾟｰ. -d- で日付ｺﾋﾟｰしない
  -df<FILE> ﾌｧｲﾙ FILE の日付をｺﾋﾟｰ
  -ep       FRM 出力で, ﾌｧｲﾙの最後にRGB ﾊﾟﾚｯﾄを付加する
  -f<FILE>  FILEに出力. 1ﾌｧｲﾙのみ変換
  -i[2]     ﾍｯﾀﾞ情報一覧(変換無).  -i2なら変換時と同じ表示
            なお、ファイル名の拡張子が省かれると IFMT のものが該当する
  -o[DIR]   出力先ﾃﾞｨﾚｸﾄﾘを指定. -oのみのとき入力ﾌｧｲﾙのﾃﾞｨﾚｸﾄﾘに出力
  -p        入力ﾌｧｲﾙ名と同じ名の16色ﾊﾟﾚｯﾄ･ﾌｧｲﾙがあれば入力
  -p=FILE   16色ﾊﾟﾚｯﾄ･ﾌｧｲﾙがあれば入力(拡張子省略:RGB,ALG,PALの順に検索)
  -pbm      ﾃﾞﾌｫﾙﾄ･ﾊﾟﾚｯﾄをﾓﾉｸﾛ(16or256)階調にする(b1,frm(,tif)に影響)
  -pd       出力のﾊﾟﾚｯﾄを16色ならﾃﾞｼﾞﾀﾙ8色に, 256色ならVA256色にする
  -pm       出力のﾊﾟﾚｯﾄをﾓﾉｸﾛ(16or256)階調にする
  -pn[N]    ﾊﾟﾚｯﾄ 4ﾋﾞｯﾄ->8ﾋﾞｯﾄ拡張のときの下位4ﾋﾞｯﾄの値. N:0〜15
            -pn のみだと、同じ4ﾋﾞｯﾄを２つ並べる
  -pw[FILE] RGB|ALG|PALﾊﾟﾚｯﾄ･ﾌｧｲﾙを出力(拡張子で指定. 拡張子省略:RGB)
  -pa[FILE] -pw に同じ. ただし拡張子省略は ALG
  -pp[FILE] -pw に同じ. ただし拡張子省略は PAL
  -qf       RGB,Q0 出力のとき情報ﾌｧｲﾙとして fal を出力
  -qi       RGB,Q0 出力のとき情報ﾌｧｲﾙとして ipr を出力
  -se       横座標を8ﾄﾞｯﾄ間隔(256色画像時は4ドット間隔)にして出力
  -sf<FILE> ｺﾒﾝﾄをFILEより入力
  -sm[STR]  STRをｺﾒﾝﾄにする
  -sn[NAME] ｾｰﾊﾞ機種名(4ﾊﾞｲﾄ)を指定
            -snのみだとv0.92以前のヘッダ変換
  -sr[N,M]  ﾄﾞｯﾄ縦横比をN,M にする. N,M:0〜255
  -su[USER] ﾕｰｻﾞ名を指定
  -ti       TIFF出力はｲﾝﾃﾙ式
  -tm       TIFF出力はﾓﾄﾛｰﾗ式
  -th       16色TIFF出力で上位 4ﾋﾞｯﾄに先に詰める
  -tl       16色TIFF出力で下位 4ﾋﾞｯﾄに先に詰める(TOWNS型)
  -tp       TIFF入力でﾃﾞﾌｫﾙﾄ･ﾊﾟﾚｯﾄをTOWNS-TIFFのﾃﾞﾌｫﾙﾄ･ﾊﾟﾚｯﾄにする
  -x4       16 色ﾌｫｰﾏｯﾄ画像を256色ﾌｫｰﾏｯﾄ画像にして出力(駄目な場合あり)
  -x8       256色ﾌｫｰﾏｯﾄ画像を 16色ﾌｫｰﾏｯﾄ画像にして出力(駄目な場合あり)
  -xc       256色画像のときﾊﾟﾚｯﾄの15〜255番がすべて 0なら 16色画像出力
  -xf       ｺﾏﾝﾄﾞ･ﾗｲﾝのﾌｧｲﾙ名の扱いを infile outfile と解釈
  -xs4      16 色画像のみ変換
  -xs8      256色画像のみ変換
  -ye       PI入力で機種依存領域を無視
  -yu       PI入力でｺﾒﾝﾄの１行目をﾕｰｻﾞ名として扱う
  -yp       PI出力でﾊﾟﾚｯﾄを出力しない（ﾃﾞﾌｫﾙﾄﾊﾟﾚｯﾄにする）

 PC98専用オプション
  -98       98専用安易ローダ＆セーバ・モード
            mg -98 file で安易ローダになる(MAKI形式常駐ﾊﾟﾚｯﾄに対応).
            ただし640*400の範囲のみでｽﾞﾘｽﾞﾘ等はできない.
  -98w      PC386M/P 256色ﾓｰﾄﾞ(VRAM 2画面). セーバ時(-s指定時)のみ有効.
  -s        -98指定時, VRAM(640*400)をセーブ. パレットは常駐パレットを使用
            （-98w指定時はパレット・ファイルを仕様）
            ﾃﾞﾌｫﾙﾄの出力ﾌｫｰﾏｯﾄはPi. 他のﾌｫｰﾏｯﾄの指定は mg -98 -s .mag file か
            mg -98 -s file.mag のようにすればよい
  -sX0,Y0,X1,Y1
            -98 -98w 時の部分ｾｰﾌﾞ. 16色(-98)時は1280*800の範囲が有効
            -98w では 640*400以内のこと
  -k        -98指定時、一枚表示ごとにキー入力待ち
            ESC:終了  CR,SPC,TAB:次の画像  T:テキスト on/off

省略時オプションとしては -ti -tl -qf が設定されています。



■  -iでのヘッダ情報表示

  mg -i * とかで、変換できるファイルのヘッダ情報の表示を行えます。

Name         Col   Size    Ratio  Dot  Save
------------ --- --------- ----- ----- ---- ----------------------------------
A.PI          16  301*301    26%  0:0  MG   (10,10)-(310,310)
A5.MAG       256  640*409    22%  0:0  88VA (0,0)-(639,408)

というふうに表示されます。

　Name はファイル名、Col は16色画像か256色画像か、Sizeは画像サイズ、
（横幅＊縦幅）、Ratioは画像の圧縮率、Dotはドット縦横比、Saveはセー
バ(機種)名(フォーマット名)、最後のはセーブ(ロード)範囲です。
　
　画像の圧縮率は大体の目安です。計算方法は、
　　圧縮率 = （ファイル・サイズ ／ 画像のバイト数） ＊ １００(％)
で、画像のバイト数は、１６色画なら（横幅＊縦幅／２）、256 色画なら
（横幅＊縦幅）となります。
　計算の手を抜いてるので普通に計算したばあいより誤差があるでせう
（ファイル・サイズ、画像のバイト数を２５６バイト単位に切り上げてか
ら計算しています）。だもんで、画像のバイト数が1,2Kといった小さい画
像については結構誤差があるでせう。
あ、.B1画像は .B1+.R1+.G1+.E1+ﾊﾟﾚｯﾄ･ﾌｧｲﾙで1組ですが、.B1のみで圧縮
率を求めてしまいたえず25%になってしまいます^^;(もち実際は100%ね)

　ドット縦横比は Pi の仕様を採用しています。縦比、横比のどちらかが
０だと、１：１ということになります。

　セーバ機種名は Pi,MAG についてはヘッダにありますが、その他は無い
ので、フォーマット名をその名前とします。


　なお、-i2 を指定すると、上の表示方法でなく、変換時と同じような表
示になります。また、-i3 だと、-i2の表示に加えパレットも表示します。



■  全体に関する制限等

・16色または 256色のみで、色数は変換せず(16<->256色変換はできない)
  ピクセル・データの劣化しない範囲で変換します。
  BMP や TIFF の二値画像やフルカラー画像には未対応です。

  16色画像を主においており 256色画像については制限が多くなってます。

・１６ビット・パソコン用の画像としては比較的大きなサイズの画像も変
  換できると思いますが、実際にどれくらいまで大丈夫かは？です。フォ
  ーマットにもよりますが、mag は横幅3000ドット前後、以外は4000以上
  いけそうかな... 縦はもっといけるとおもいます。

・横幅は８ドット以下だとうまく変換出来ないかもしれません。
  少なくとも Pi 出力はそのはずです. 
  （極端に小さい画像については無視してるむきがある...^^;）

・MAG,VRAM,BMP 間の変換では、横幅や横始点が８ドット間隔でない場合
　誤変換するばあいがあります。横始点が８ドット間隔でないものを BMP
　に変換するときや、-x4,-x8,-xcによる16色<->256色ではMAG,VRAM,BMP
　間では必ず誤変換しますので、指定しないでください。
　（そういう変換をしたいばあいは、これら以外のフォーマットで変換し
　　てから目的のフォーマットに変換してください）

・各フォーマットでヘッダは違うので、変換によって、どうしてもヘッダ
  情報の劣化・誤差が生じます。
  このプログラムはもともと主に MAG<->Pi 変換を目的に作られており、
  MAG<->Pi変換においてはなるべくヘッダ情報が劣化しないようにしてい
  ます（v0.93でちと方針を変えたけど^^;）。

  が、BMP, TIFF についてはピクセル・データが変換できればいいや、で
  入力出力ともにヘッダ情報を結構無視しています。ばあいによって（特
  にTIFF）は誤変換等もあるかもしれません。

  あっと、B1,FRM,BLK はヘッダがないです(^_-;

・空きメモリは結構いるでせう。
  必要メモリは各変換によって違い、確認したわけではありませんが、大
  雑把にいって 200Kバイト以上空きメモリがあったほうがいいと思います。
  （メモリの配分方法を手抜いてガバっと与えるようにしているので^^;）

  とくに mag 出力のばあいは 300K,400Kバイトは必要でせう。
  Mag出力 では MAGフォーマットでのピクセル・データを、メインメモリ
  に取ったバッファに溜めて最後に出力するようにしてるので、そのバッ
  ファに収まらなくなるとエラー終了します（画像サイズが広かったり、
  絵が複雑だったりすると...）

  いっぱいになるとテンポラリ・ファイルに退避するようにしたほうがい
  いなとは思いますが、めんどくさい^^; のと、実際にバッファが溢れる
  ような画像はそうないだろう、と思って手をつけていません（でも最近
  は結構でかい画像とかある^^;）.

・単に処理をスキップさせればいいような場合でも、何かあるとすぐアボ
　ートしてしまいます。おいおい修正するつもりですが...

・パレットのないTIFFのデフォルト・カラーは嘘になるでせう... 一応16
  色のTOWNS-TIFFのは大丈夫とおもいますが...

・B1,BLK(FRM)出力できる画像は 16色で 640*400 以内に収まる画像のみ
  です。
　画像自体が640*400以内に収まるサイズでも始点の位置の都合、終点が
　640*400外になるとだめです(はみ出した部分は無視します).



■  実行に必要なメモリ

　実のとこどの程度必要なのかはっきりとは把握してませんが... 必要メ
モリは各フォーマットによって違うし...で、大雑把に考えて、

まず、基本サイズとして
  	プログラム＆変数  50K前後?
  	フォーマット共通のバッファとして　64K前後

あと、それに個別に
	16色  Pi 入出力に関しては +64K+α(数Kbyte〜数十Kbyte)
	256色 Pi 入出力に関しては +128K+α
	BMP,TIFF 入出力に関しては +α
	MAG 入力に関しては +96K+α
	MAG 出力に関しては +32K+残りすべてのメモリ（ﾋﾟｸｾﾙ･ﾊﾞｯﾌｧ）
	BLK,B1の入出力に関しては128K+α(ただしVRAM指定すれば+αのみ)

が必要です。数字はあくまでも目安で、実際にはこれより少ない量が取ら
れるし、実際には少しはメモリを動的に配分するところもあるので（実の
とこもっと動的に配分する予定でしたが、失敗して^^;現在のような大量
メモリを必要になってしまっています^^;）

　例えば、16色画像の mag->pi なら
	50K+64K+96K+64K+α = 274K+α
で 250〜300Kというとこですか。

　256色画像の pi->mag は mg の変換では一番メモリが必要で
	50K+64K+128K+32K+P+α = 274K+P+α  (P:MAGのﾋﾟｸｾﾙ･ﾃﾞｰﾀのｻｲｽﾞ)
で P のサイズが問題ですが、 これは絵のサイズや複雑さによってちがっ
てきますがかなりの量が必要です。生成されたMAGﾌｧｲﾙのだいたい 4〜7割
はこのピクセル・データが占めるかな、と漠然と思ってますです（調べた
訳でなく、あてずっぽですが）。



■  MAG<->Pi変換について

□  Pi と MAG のヘッダのあつかい

  MAG と PI のヘッダで

    ・画像サイズ、色数
    ・コメント
    ・ユーザ名（別記参照）
    ・パレット・データ
    ・始点情報（Piでは機種依存情報として保持）

についてはほぼ互換性があるのでそのまま移しています。
また、セーバ名無しで -sn オプションを指定すると、
    ・セーバ名
も、そのまま移します（-sn の指定のないときは、セーバ名は"MG  "にな
ります）
が、
    ・ドット比、２００ラインモード
    ・デフォルト・パレット、デジタル・パレット・フラグ、８色フラグ

については歪みがでてしまいます。問題については下記を見てください。

  あと、
    ・機種依存データ、機種コード・機種依存フラグ

については（Piの基点情報除く）には対応できないので、失われてしまい
ます（mag.exe の透明色データには対応してますが^^.）
ただし、セーバ名無しの -sn オプションを指定すると、mag=>piにおいて
mag の機種コード、機種依存フラグ、スクリーンモードの３バイトは Pi 
のダミーコメント領域に保存するようになり pi=>MAGで元に戻すことがで
きます。

  ヘッダの詳細については各フォーマットの仕様書を見てください。



□  ドット比について

  Pi では 縦横ドット比を縦比１バイト横比１バイトで保持し、MAG では
ドット比は200ライン・フラグがあるだけです。
  MAG->Pi では 200ラインフラグが立っていれば、縦横ドット比を2:1 に
するだけで劣化しませんが、Pi->Mag では 縦比/横比が2以上のとき 200 
ライン・フラグを立てるだけで、細かい比は失われることになります。
（が、実際のとこ、Piでは２００ライン・モードかどうかくらいにしか縦
　横比が使われていないような... PC98のドットは1:1 じゃないけど, そ
　うだとして扱ってるし... ）



□  パレットについて

  パレット・データの扱いは Pi と Mag では、 フォーマット上未使用の
下位ビットの扱いが若干違いますが、実質問題にならないのでなんら手を
加えず RGB の並びだけ直して移しています。

  問題なるのは、パレット関係のフラグです。Pi,MAG間で互換性がないの
で失われます。
  MAG にはデジタル表示しかできない機種を考慮してパレット・データが
デジタル・カラーかどうか、８色パレットかどうかを示すフラグがありま
すが Pi にはないので Mag->Pi で失われます。逆に Pi->Mag で、たとえ
パレットが８色でもデジタルでも、パレットの内容をチェックしてないの
でフラグを立てるようなことはしません。

  また Pi にはデフォルト・パレット・フラグがあり、このフラグが立っ
ているばあいはパレット・データが省かれて Pi フォーマットで定義され
たパレットが用いられます。Pi->Mag ではデフォルト・パレットを生成し、
フラグが立っていたかどうかについては失われることになります。

  もっとも失われるといっても、８色しか出ない、 256色は出るけどパレッ
ト固定だ（88VA^^;）、 というばあいの手助けなだけで、実際にはそう特に
困ることはないでせう。

  まあ、パレット・データをチェックすれば、ある程度フラグを再現でき
るでせうが...（めんどくさい^^;）



□  Piの拡張情報について

  Piフォーマットでは標準では始点情報はサポートされていませんでした
が、JUNTA&LOCKE 氏作の pi98.exe でサポートされた始点情報が他のツー
ルでもサポートされて実質的に定着している感じもあり、'93/9に Pi作者
のやなぎさわ師によって正式な拡張となりました。  でもってユーザ名に
ついては結局 mg で用いた方法を無理して採用していただきました。

　また、それにともない拡張領域に拡張する場合の方法（フォーマット）
が決められました。

　やなぎさわ氏が正式なドキュメント書かれると思いますが、とりあえず
ここに拡張方法を書いておきます（Piツールを作ろうって方以外無用の話
ですが^^;）
　たとえば、１バイト目が 0x01 なら直後の４バイトは始点座標、その次
の１バイトが0x02なら直後の４バイトは透明色、0x03なら... でいくつか
のデータ(タグ)が並んでいて拡張領域の長さまできたら終り、というふう
になります（TIFFを知っている方なら TAG を想ってください）。

　データ(タグ)ですがちょい複雑で５バイト固定のタグ（ショート・フォ
ーマット）と可変長のタグ（ノーマルフォーマット）の２種類あります。
　ショートフォーマットは、１バイト目が ID で 0..0x1F まで、直後の
４バイトがデータの内容です。
　ノーマルフォーマットは ID は１バイト目が英字で始まる英数記号文字
４バイトで、次の２バイトでデータの長さ(N)を表し、次の Nバイトがデ
ータの内容になります。
　またショート・フォーマット及びノーマルフォーマットの英大文字で始
まる ID のものは、やなぎさわ氏による正式な拡張で、他の方がこれらを
用いた拡張を無断で行なってはいけません。
　英小文字で始まる ID のものは、セーバ依存の非公式なローカルな拡張
となります。また、ローカルID を扱う場合はセーバ名をチェックします。

　現在決定している（と思われる）ID としては、ショート・フォーマッ
トの 0x01〜0x04 があります。
　・0x01  始点(X,Y)		2バイト整数×２
  ・0x02  透明色		4バイト整数（0〜15(255)）
  ・0x03  ﾊﾟﾚｯﾄの有効ﾋﾞｯﾄ数	4バイト整数（1〜8）
  ・0x04  パレットの使用個数	4バイト整数（1〜16(256)）
0x03 はパレットの各１バイトの上位何ビットが有効か、ということで、
0x04 はパレット・テーブルの先頭何色を実際に使っている（それ以降の
パレットは無視できる）か、ということです。0x04は8色画や(VAな)32色
画用といったとこです。


　mg v0.92 では、0x01〜0x04に対応、他のIDは無視し読み飛ばします。


あ、mag.exe で 透明色指定した mag 画像を pi に変換すると、透明色情
報のあるデータが作成されてしまいます（ローダが対応してなきゃ意味な
いけど）

  なお、-ye で、機種依存領域を無視することができます。



□  Piフォーマットでの作者(ユーザ)名の扱い

   作者名はコメント領域に拡張して置きます。コメント部の先頭に、
     User:作者名(CRLF)
のように 'User:' の５バイトに続けて作者名を置き、作者名の終りとし
てCRLF(0x0d,0x0a)を必ず入れ、コメントはあればその後ろに置いていま
す。
　作者名の文字数ですが、MAGからのコンバートを目的にしていたので
MAGと同じ 18バイト以下で収めています（18バイト以上あった場合は
CRLFが現れるまでを無視してます）

　あとコメント関係のオプションで -yu というのがあります。
  -yu オプションは、BERO氏作の Pi.exeの古い版(v0.22)ではユーザ名を
コメントの先頭に入れており、また、人によっては１行目に作者名を入れ
てるかもしれないので用意しました（現在のpi.exe(v0.24)では'User:'が
つきますです(^^)/ ）
  -yuを付けて変換してよいかどうか画像を確かめて利用してください。



■  BMP,TIFF について

  BMP,TIFFの対応は画像の合体等の加工を行うのに扱い安い無圧縮の作業
ファイルがほしいな、と思って用意したもので、mgが吐き出したデータを
食べられればいい、程度の代物です。特に TIFF はヘッダ情報が豊富でい
ろいろなデータがあるので、変換できない画像もおおいことでせう。
（実のとこ BMP,TIFF の資料をぼくは十分には持っていないので対応でき
  ない、というのもあります^^;）
  TIFFについてはオマケと思ってくださいませ。



□ BMP変換の制限

　BMPはWindowsの壁紙です:-)  BMPの無圧縮な 16色256色のみです。
  横幅や横始点位置が８ドット単位でないMAGやVRAM等からの変換の場合、
誤変換してしまうことが多いです。



□　変換できるTIFF

  TIFFファイルは無圧縮でシングル・プレーンな１６色または 256色なも
のなら、インテル形式、モトローラ形式のどちらでもいいし、１６色のと
きの１バイトの格納方法は上位が先でも下位が先でもいいように作ったつ
もりです。が、TIFF画像はほとんど持っていないので妖しい面が多いです。

　TIFF出力のデフォルトは、インテル形式で、１６色のときの１バイトへ
の格納方法は上位４ビットに先に詰めるようになっています。

　出力がインテルかモトローラか、１バイト格納が上位が先か下位が先か
は、オプション(-ti or -tm, -th or -tl)で指定できます。

　TIFFは RGBパレット・データは各 2バイトですが、下位バイトは無視し
ています。



□　TOWNSなTIFF

  mg v0.75 まででは、TIFF出力は TOWNS-TIFF に合わせていましたが、
現在は'普通なTIFF'(^^?)になるようにしています。

　TOWNS-TIFFと普通なTIFFとの違いは、TOWNS-TIFFは16色画でピクセルを
１バイトに格納するのに下位４ビットに先に詰めるようになっていること
と、パレット無しのばあい、普通のTIFFはグレイスケール(モノクロ階調)
にしますが、TOWNSの（古い）TIFFでは、TOWNS独自のデフォルト・パレッ
トを用いることになっています。

　もし、パレット無し TOWNS-TIFFを入力したいなら -tp オプションを、
TOWNS-TIFFを出力したいなら -tl オプションを指定して実行(変換)して
ください。



□  TIFF,BMPの解像度

  TIFF,BMP では、Piのドット縦横比のかわりに解像度があります。
  TIFF->TIFF, BMP->BMPにおいては、元画像の解像度をそのまま使います。
  それ以外のTIFF,BMP入出力では、解像度を元にドット縦横比を求めます
が（内部の処理ではPiのドット縦横比を基準にしてます）、かなり手抜き
な計算をしているので、歪みがでます。

　TIFF,BMP入力では、手抜きですがそれなりに解像度より縦:横比を求め
ています。
　縦横比が 1:1 か 2:1 かがわかればいいや、くらいに考えて(諦めて)く
ださい。

　縦横比を TIFF の解像度にするのは、縦横比 m:n とすると、
	m = n = 1 -> 解像度(縦,横)=(100dpi, 100dpi)
	m,n <= 5  ->       (n*50, m*50)
	m,n <= 10 ->       (n*25, m*25)
	m,n <= 50 ->       (n*10, m*10)
	m,n >  50 ->       (n　 , m   )
のようにしています。TOWNS-TIFFのデフォルトの解像度が 75dpiとのこと
なので、それを目安に大雑把に適当に選びました^^;
ドットの縦横比さえ合えばいいや、で、解像度としては不当な値かも^^;

  BMP のときは、解像度は１インチあたりでなく１メートルあたりなので、
TIFFの各解像度を単純に４０倍しているだけです（ほんとは 39.37倍だけ
どめんどくさいので40^^;）。これも、解像度としては不当な値かな^^;

　このプログラムで作成された TIFF,BMP ファイルを、解像度に忠実なツ
ールで読込んだりすると不都合があることでせう（でもそれらのツールは
縦横比を無視するとか再設定するとかが出来るだろうと期待できる？）



□　TIFF の色、パレット

　TIFF の各パレットは2バイトですが、入力ではMG内部では上位１バイト
のみを採用し、下位バイトは捨てています。また、TIFF出力では１バイト
を上下バイト同じ値で２バイトにしています。

　あと TIFF の色の種類についてのタグは参照しておらず、無条件に RGB
データとして扱っています。だもんで色がおかしくなることがあるかも。



■  DJP について

　.DJPファイルは、戦うクラリス氏の考案されたプラグイン機能で用いら
れる中間ファイルのフォーマットで、256色/24ﾋﾞｯﾄ色があり、このうち
256色画像にのみ mg では対応しています。
  各氏によっていろいろなプラグイン（DJPファイルを生成するコンバータ）
が発表されており、それらを流用しよう、という目的で付けてみました.

　残念ながら mg 自身にはプラグインを呼び出す機能はありませんが、
（できたら便利だろうが無茶^^;）、逆にプラグインとして他のツールから
呼びだせる可能性はあります（各ツール（の定義のしかた）しだい...
-xfオプションを使えば phantom 等用の .pi や .mag プラグインに:-）



■  RGB,Q0出力について

　フルカラーベタファイルである RGB,Q0 出力ができます. RGB と Q0 は
単に拡張子が違うだけでフォーマットは同じです。
　RGB,Q0 にはヘッダがないのでかわりに情報ファイルである .FAL か.IPR
を生成します。が、有効なデータは、画像縦横サイズと始点のみであとは
失われます。
　.FAL .IPR についてはよくわかってないので妖しいかも^^;



■  B1,BLK,FRM について

　フォーマットで B1とは、拡張子がB1,R1,G1,E1の４つのファイルからな
る 640*400の16色のベタ・ファイルのことです。
  パレット・ファイルは.RGB,のみ対応しています。

  B1入力では、B1,R1,G1,E1(,RGB) で足りないファイルがあっても、別に
エラーにならず、そのファイルを使用しないだけです（デフォルトの値が
設定されます）。


  FRMは PC98のグラフィック・エディタ、エスキースの画像ファイルらし
いです（ぼくはグラフィック・エディタの MPSのテンポラリ・ファイルの
を参考にしました）
　単に.B1 .R1 .G1 .E1 がこの順にならんで１つのファイルにまとまって
いるものです。
  このプログラムではこの仕様をかってに少し拡張して扱い、ファイルの
最後に.RGBパレット・データが付いているばあいもあるとしています。
  ４プレーン分のデータを読み込んだあと、48バイト入力してみて入力で
きたなら、それを RGBパレット・データとして用います。48バイト入力で
きなければ、.RGB パレットファイルより入力し、それもなければデジタ
ル８色（0-7と8-15が同じ）にします。
  この拡張は自作のツールでそんなファイルを作成することがあったから
です^^;
　あとBLK は Alice-Soft(?) のﾌｫｰﾏｯﾄで、BRGﾊﾟﾚｯﾄ48ﾊﾞｲﾄ+B1+R1+G1+E1 
の合体したFRM と同じようなファイルです（でもＦＳＷで拡張された拡張
BLK には対応してませんです）。



■  パレット・ファイル

　16色画像用にオプションでパレット・ファイルを入力したり(-p)作成し
たり(-pw,-pa,-pp)できます。
  対応しているパレット・ファイルは、.RGB と KIDな .ALG, ｴｽｷｰｽな.PAL
で、指定されたパレット・ファイル名の拡張子で判別します。
  入力で拡張子が RGB,ALG,PAL でないときは、.RGB .ALG .PAL の順に拡
張子を付け変えてさがします。
また、パレット・ファイル名を指定しなかった場合は入力ファイル名の拡
張子を .RGB|ALG|PAL に変えたものを読込みます。
　出力ではパレット・ファイル名を省略したばあい、出力ファイル名の
拡張子を-pw なら .RGB、-pa なら .ALG, -pp なら .PAL にしたものに出
力します。

  なお、.ALG ファイルの変換ではほんのちょっと変換誤差があります。
  RGB(PAL)->ALG->RGB(PAL)変換をした場合、変換後のRGB(PAL)は変換前
のRGB(PAL)とは若干値がずれます。使うなら、そのへんのこと覚悟して
くださいませ（って、たいした差でないです^^;...はたしてALG<=>RGBって
誤差のでない方法ってあるんでせうか?）

　256色画像の場合は、256色用の.RGB(.PL8)と.PAL に対応しています。
これはPC386M系のＦＳＷで用いられているものです。
　仕様については pal386mを参照してください... ですが、簡単にいうと
.RGB は16色.RGBを拡張したような代物で R,G,B各1ﾊﾞｲﾄ(値は0〜255)の
3ﾊﾞｲﾄが256個並んだ計768ﾊﾞｲﾄのファイルです.
.PAL はこれも16色.PALを拡張したような代物でテキストで、１行が
	n	R	G	B
からなり（n:ﾊﾟﾚｯﾄ番号(0〜255) R,G,B:0〜255）、それが複数行あるﾃｷｽﾄ
ﾌｧｲﾙです。
  .PL8 は.RGBの別名で中身は同じです。



■  PC9801 モードについて

　DOS 汎用といいつつ機種依存な部分があるのもなんですが、まあ MG 作
成のためのデバッグ用のモードです^^;
（単に別にセーバを作るよりも MG に付加するほうがずっと楽だからとい
　うのもある^^;）

  -98オプションを指定することにより16色画のみですがロード・セーブ
ができます。MAKI形式の常駐パレットに対応しています。
　これは B1,FRM をサポートしたついでに設けたもので、ズリズリ等でき
ませんのでローダとしてはあまり使い道はありませんが、セーバとしては
２ページ繋げた（1280*400 または 640*800 の）範囲でドット単位で部分
セーブできるのでそれなりに使いではあるのではないか、と。

　あとセーブ(-s)時のみですが -98w とすると PC386M での256色モードを
想定して VRAM ２ページを１つの256色画面としてセーブできます。
パレット・データはパレット・ファイル(.RGB,.PAL)より入力します。
（PC386M/PのI/Oをアクセスすることはありません）



■  -seオプションについて

  このオプションを指定すると横座標や横幅が８ドット間隔になっていな
い画像を強制的にそのようにすることができます（２５６色画像に対して
は４ドット間隔に）。
  単に MAG変換のルーチンを流用しただけのもので、画像の加工を行うと
きに横８ドット間隔でないといけない、とかそのほうが便利、ってばあい
に利用できるように用意しています。



■  -x4,-x8,-x24,-xc オプションについて

　-x4は、256色画像を、パレット先頭16個のみしか使われていないものと
して強制的に16色画像出力します。

　-x8は、16色画像を、パレット16〜255をすべて 0にして 256色画像で出
力します。

  -x24は、djp出力において、24ﾋﾞｯﾄ色で出力するようにします。

  -xc は-x4の変種で、 256色画像入力のとき、パレット16〜255がすべて
0 ならば、パレット先頭16個のみしか使われていないものとして強制的に
16色画像出力します。
　当然のことながら、パレット16〜255が全て0だからといって使われてい
ないなどという保証はないので、使用するばあいは気をつけてくだい。

  -x4, -xc（ついでに -xf）は djp フォーマット出力、とくにtif_plug等
で変換された16色画の入力を想定して付加しました。


  なお、横幅、始点等が８ドット間隔でない画像に対してこれらのオプショ
ンを使うと誤変換することが多いです。とくに mag,bmp フォーマットでは... 

　これらオプション指定時はmagとbmpによる入出力の組み合せを指定しない
でください。ほぼ必ず誤変換します.



■  参考

  MAG は、Woody RINN氏の考案された16色/256色画像ファイルのフォーマ
ットです。
  Pi は、やなぎさわ氏の考案された 16色/256色画像ファイルのフォーマ
ットです。
  DJPは、戦うクラリス氏の考案されたプラグイン機能で使われる 256色/
24ﾋﾞｯﾄ色画像ファイルのフォーマットです。
  フォーマットを公開され、かつフォーマットの使用にほとんど制限をか
けられていない各氏に感謝します。

  BMP,TIFFﾌｫｰﾏｯﾄについては、実は、よく知りません^^; って、BMPはﾏｲｸ
ﾛｿﾌﾄ社、TIFFは Aldus社(とﾏｲｸﾛｿﾌﾄ社?)でせうが、利用については？です
（使って, よかったのだろうか^^;）


　作成にあたって各フォーマットの資料として、
	magbible.doc	   			Woody RINN氏
	pitech.txt, pi.c   			やなぎさわ氏
	VA用Tiff(BMP)ローダ tifalo のソース	小松弘明氏
  	Oh!FM '89-6 ｢TIFFﾌｫｰﾏｯﾄ｣		大江和久著
 	TIFF Format Ver 5.0 概要説明書(rel 0.1) Noboru Abe氏
        TOWNS 標準TIFF仕様書			富士通
	djp.spc					戦うクラリス氏
等を参考にしました。

　また、確認等に
	mag.exe					Sam氏作
	magd.exe,magdsave.exe			TAK.氏作
	dopi.exe,pimk.exe			拙作^^;
	pi.exe					BERO氏作
	pi98.exe				JUNTA&LOCKE氏作
	piva.exe				LOCKE氏作
	tifalo.exe(va)				小松弘明氏作
	tiff98.exe tifw98.exe			ﾌｧﾝｺﾞﾙﾝ氏作
	tif_plug.exe				あべべ氏作
	bmput.exe				Michiaki-Okada氏作
	bmlay.exe				hatchobori氏作
	q0wl.exe				たけちん氏作
	phantom.exe				戦うクラリス氏作
	wml21.exe				みすらんであ氏作

その他もろもろのフリーウェアを利用,参考させていただいています。

これら配布されている作者(筆者)の方々に感謝します。



■  たわごと

  mg の前身は、pimag(mag2pi&pi2mag), pibmp(bmp2pi&pi2bmp), brge2pi
で、各変換ごとに実行ファイルを用意してましたが、バージョンアップの
ときに、似てちょっとづつ違うソースを修正し配布し直すのはめんどくさ
く馬鹿らしく、その上すでに展開圧縮ルーチンがあるので作ろうと思って
るmag2bmp, bmp2magを作ると一層手間がかかり、さらにtiffも加わると...
ううあああ、と頭が爆発しそうなので、一本化することにしました。

  一体化したはいいけれど、使い勝手のほうは？です。

  入出力フォーマットの指定方法はかなり迷いました。makeを真似た現在
の指定方法は自分では気に入ってるけど、他の方にわかりやすいかどうか
は？です。

  プログラム名の命名にも困りました。フォーマット指定を必ずしなけれ
ばならないので、なるべく短め出来れば２文字にしよう（さすがに１文字
は勇気がなかった^^;）と思い意味のある名前の頭文字にしたかったけど、
英語落ちこぼれなぼくにいい名前が浮かぶわけなく、なんとなく MAGを使
ってる人が興味を持つかも、と、せこい考えで今の名前になりました^^; 
マルチ？グラフィック？なんたらかんたら... って感じでしょうか... た
れか考えてやってくださいな^^;

　TIFF入力は変換できない（とか失敗する）画像がかなりあってあたりま
え、と思ってやってくださいませ。TIFFはセーバが楽できるぶん、ローダ
に（より多くの対応をしようとすればするほど）負担がかかるので。
（v0.95 以降は DJP 入力できるので、あべべ氏の TIF_PLUG.EXE を利用
　すれば...:-）



■  配布条件

  このプログラムはいわゆるフリーソフトウェア(ＦＳＷ)です。
  パソ通(ｵﾝﾗｲﾝ) での非営利配布ならば作者に連絡不要で再配布していた
だいてかまいません。その他の場合（雑誌紹介とかディスク配布で同梱し
たいなど）事前に相談ください、ってことで^^;
それから作者はいかなる責任も義務も負いません。利用者の責任で用いて
ください。

  十分なチェックを行ってるわけでないので（それどころか かなり不十分）
変換後は表示して誤変換してないか確かめることをお勧めします。とくに、
元のファイルを消去してしまうような場合は...



■  おわりに

  ドキュメントはきっと必要なことを書き忘れてることでせう^^;

  虫をみつけたならぜひ知らせてやってくださいね。義務のつもりはない
けど、できることなら虫はなるべく無くしたいので（取れるかどうかは別
ですが ^^;）

				てんか☆（北村雅史）
				NIFTY			NBB00541
