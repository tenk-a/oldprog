module Usage

    import WRITLN
    import Dos
    import Pri

*proc Dsp(ax)
begin
    var msg:b() = data
     b "mg lfn-v0.99c 16色256色画像コンバータ(MAG,Pi,TIFF,BMP等) 1993-1996,2009 tenk*\n"
     b "\n"
     b "  16色または256色の画像ﾌｧｲﾙ(MAG,PI,BMP,TIF等)を他のﾌｫｰﾏｯﾄに変換.\n"
     b "\n"
     b "usage:\n"
     b "  1) mg  .<OFMT>        [-ｵﾌﾟｼｮﾝ･･･] 入力ﾌｧｲﾙ名･･･\n"
     b "  2) mg  .<IFMT>.<OFMT> [-ｵﾌﾟｼｮﾝ･･･] 入力ﾌｧｲﾙ名･･･\n"
     b "    IFMT -- 入力画像ﾌｫｰﾏｯﾄ  mag pi bmp tif djp blk b1 frm pmt\n"
     b "    OFMT -- 出力画像ﾌｫｰﾏｯﾄ  mag pi bmp tif djp blk b1 frm rgb q0 pmt\n"
     b "\n"
     b "指定例:\n"
     b "  1) mg .PI  *.tif *.bmp    ｶﾚﾝﾄﾃﾞｨﾚｸﾄﾘ のtifとbmpﾌｧｲﾙを pi に変換\n"
     b "  2) mg .BMP.MAG  *         ｶﾚﾝﾄ･ﾃﾞｨﾚｸﾄﾘの BMPﾌｧｲﾙ を mag に変換\n"
     b "\n"
     b "・入力ﾌｧｲﾙ名の拡張子を出力ﾌｫｰﾏｯﾄ名にして、ｶﾚﾝﾄ･ﾃﾞｨﾚｸﾄﾘに出力する.\n"
     b "・1)の場合、入力ﾌｫｰﾏｯﾄの判別は拡張子で行うので拡張子が必ず必要.\n"
     b "・2)の場合、入力ﾌｧｲﾙの拡張子に関わらず指定の入力ﾌｫｰﾏｯﾄで処理.\n"
     b "  また、拡張子の無いものには拡張子を付加.\n"
     b "・ｵﾌﾟｼｮﾝ, 入力ﾌｧｲﾙ名は交ざっていてよい. ｵﾌﾟｼｮﾝは先に取り込む.\n"
     b "・TIFF,BMP は無圧縮の16色と256色のみ有効(2値やﾌﾙｶﾗｰは不可)\n"
     b "・ﾍｯﾀﾞの違いにより変換によってﾍｯﾀﾞ情報が失われるので気をつけること\n"
     b "  とくにTIFF入力では対応していない情報(無視するタグ)が多いので注意\n"
     b "・TOWNS-TIFFを変換するばあいは -tl -tp オプションを設定すること\n"
     b "・B1は B1,R1,G1(,E1)(+rgbﾊﾟﾚｯﾄﾌｧｲﾙ)で 1組の16色640*400ﾍﾞﾀﾌｧｲﾙ.\n"
     b "・出力ﾌｫｰﾏｯﾄでの rgb はﾊﾟﾚｯﾄ･ﾌｧｲﾙでなく q0 と同じ構造のﾌﾙｶﾗｰﾍﾞﾀﾌｧｲﾙのこと.\n"
     b "\n"
     b "ｵﾌﾟｼｮﾝ:\n"
     b "  -?[N]     ﾍﾙﾌﾟ表示. Nは[more]の間隔(行数). -?0で[more]なし\n"
     b "  -2        ﾄﾞｯﾄ縦横比を2:1にする. B1,FRM入力は640*200ﾗｲﾝ画像扱い\n"
     b "  -c        -vs 指定時、画像表示前に毎回VRAM消去\n"
     b "  -l[0|1]   ﾛﾝｸﾞ･ﾌｧｲﾙ名 0:未対応 1:対応 (ﾃﾞﾌｫﾙﾄ 1)\n"
     b "  -d[-]     入力ﾌｧｲﾙの日付をｺﾋﾟｰ. -d- で日付ｺﾋﾟｰしない\n"
     b "  -df<FILE> ﾌｧｲﾙ FILE の日付をｺﾋﾟｰ\n"
     b "  -f<FILE>  FILEに出力. 1ﾌｧｲﾙのみ変換\n"//"FILE省略は-f無指定扱い\n"
     b "  -i[2]     ﾍｯﾀﾞ情報一覧(変換無).  -i2なら変換時と同じ表示\n"
     b "            なお、ファイル名の拡張子が省かれると IFMT のものが該当する\n"
     b "  -mb       v0.98以前のmgで誤生成した256magを読込むときに指定\n"
     b "  -o[DIR]   出力先ﾃﾞｨﾚｸﾄﾘを指定. -oのみのとき入力ﾌｧｲﾙのﾃﾞｨﾚｸﾄﾘに出力\n"
     b "  -p[=FILE] 16色ﾊﾟﾚｯﾄ･ﾌｧｲﾙがあれば入力(拡張子省略:RGB,ALG,PALの順に検索)\n"
     b "  -pbm      ﾃﾞﾌｫﾙﾄ･ﾊﾟﾚｯﾄをﾓﾉｸﾛ(16or256)階調にする(b1,frm(,tif)に影響)\n"
     b "  -pd       出力のﾊﾟﾚｯﾄを16色ならﾃﾞｼﾞﾀﾙ8色に, 256色ならVA256色にする\n"
     b "  -pm       出力のﾊﾟﾚｯﾄをﾓﾉｸﾛ(16or256)階調にする\n"
     b "  -pn[N]    ﾊﾟﾚｯﾄ 4ﾋﾞｯﾄ->8ﾋﾞｯﾄ拡張のときの下位4ﾋﾞｯﾄの値. N:0〜15\n"
     b "            -pn のみだと、同じ4ﾋﾞｯﾄを２つ並べる\n"
     b "  -pw[FILE] RGB|ALG|PALﾊﾟﾚｯﾄ･ﾌｧｲﾙを出力(拡張子で指定. 拡張子省略:RGB)\n"
     b "  -pa[FILE] -pw に同じ. ただし拡張子省略は ALG\n"
     b "  -pp[FILE] -pw に同じ. ただし拡張子省略は PAL\n"
     b "  -qf       RGB,Q0 出力のとき情報ﾌｧｲﾙとして fal を出力\n"
     b "  -qi       RGB,Q0 出力のとき情報ﾌｧｲﾙとして ipr を出力\n"
     b "  -sc[N]    MAG,Pi出力の透明色を N にする\n"
     b "  -se       横座標を8ﾄﾞｯﾄ間隔(256色画像時は4ドット間隔)にして出力\n"
     b "  -sf<FILE> ｺﾒﾝﾄをFILEより入力\n"
     b "  -sk[EXT]  指定されたﾌｧｲﾙ名の拡張子を強制的に変更\n"
     b "  -sm[STR]  STRをｺﾒﾝﾄにする\n"
     b "  -sn[NAME] ｾｰﾊﾞ機種名(4ﾊﾞｲﾄ)を指定\n"
     b "            -snのみだとv0.92以前のヘッダ変換\n"
     b "  -sa[M,N]  ﾄﾞｯﾄ横縦比をM,N にする. M,N:0〜255\n"
     b "  -sr[N,M]  ﾄﾞｯﾄ縦横比をN,M にする. N,M:0〜255\n"
     b "  -su[USER] ﾕｰｻﾞ名を指定\n"
     b "  -ti       TIFF出力はｲﾝﾃﾙ式\n"
     b "  -tm       TIFF出力はﾓﾄﾛｰﾗ式\n"
     b "  -th       16色TIFF出力で上位 4ﾋﾞｯﾄに先に詰める\n"
     b "  -tl       16色TIFF出力で下位 4ﾋﾞｯﾄに先に詰める(TOWNS型)\n"
     b "  -tp       TIFF入力でﾃﾞﾌｫﾙﾄ･ﾊﾟﾚｯﾄをTOWNS-TIFFのﾃﾞﾌｫﾙﾄ･ﾊﾟﾚｯﾄにする\n"
     b "  -x4       強制16色ﾌｫｰﾏｯﾄ出力(ﾊﾟﾚｯﾄの先頭16個のみ有効として処理)\n"
     b "  -x8       強制256色ﾌｫｰﾏｯﾄ出力\n"
     b "  -x24      BMP,TIF,DJP出力時、24ﾋﾞｯﾄ色で出力\n"
     b "  -xc       256画像でﾊﾟﾚｯﾄ16〜255がすべて 0ならば 16色(-x4)出力\n"
     b "  -xf       mg .pi.djp -xf infile outfile のような入出力ﾌｧｲﾙ指定にする\n"
     b "  -xs4      16 色画像のみ変換\n"
     b "  -xs8      256色画像のみ変換\n"
     b "  -ye       PI入力で機種依存領域を無視\n"
     b "  -yu       PI入力でｺﾒﾝﾄの１行目をﾕｰｻﾞ名として扱う\n"
     b "  -yp       PI出力でﾊﾟﾚｯﾄを出力しない（ﾃﾞﾌｫﾙﾄﾊﾟﾚｯﾄにする）\n"
     b "  -ya       APICG(X68K)でｾｰﾌﾞされたPiのﾕｰｻﾞ名を認識するようにする\n"
     b " PC98専用オプション\n"
     b "  -98       98専用安易ローダ＆セーバ・モード\n"
     b "            mg -98 file で安易ローダになる(MAKI形式常駐ﾊﾟﾚｯﾄに対応).\n"
     b "            ただし640*400の範囲のみでｽﾞﾘｽﾞﾘ等はできない.\n"
     b "  -98w      PC386M/P 256色ﾓｰﾄﾞ(VRAM 2画面). セーバ時(-s指定時)のみ有効.\n"
     b "  -s        -98指定時, VRAM(640*400)をセーブ. パレットは常駐パレットを使用\n"
     b "            （-98w指定時はパレット・ファイルを使用）\n"
     b "            ﾃﾞﾌｫﾙﾄの出力ﾌｫｰﾏｯﾄはPi. 他のﾌｫｰﾏｯﾄの指定は mg -98 -s .mag file か\n"
     b "            mg -98 -s file.mag のようにすればよい\n"
     b "  -sX0,Y0,X1,Y1\n"
     b "            -98 -98w 時の部分ｾｰﾌﾞ. 16色(-98)時は1280*800の範囲が有効\n"
     b "            -98w では 640*400以内のこと\n"
     b "  -sx       -s0,0,1279,399 に同じ\n"
     b "  -sy       -s0,0,639,799 に同じ\n"
     b "  -k        -98指定時、一枚表示ごとにキー入力待ち\n"
     b "            ESC:終了  CR,SPC,TAB:次の画像  T:テキスト on/off\n"
     //b "  -x	       再起的にｻﾌﾞ･ﾃﾞｨﾚｸﾄﾘに対しても行う.\n"
     //b "  	       出力はｶﾚﾝﾄでなく入力ﾃﾞｨﾚｸﾄﾘとなる(-o[DIR]で変更可能).\n"
     //b "  -fs<N>     出力先に同名ﾌｧｲﾙがあったときの処理\n"
     //b "  	       0:.bakﾌｧｲﾙを作成  1:変換の有無確認  2:上書き\n"
     //b "  -me        ちょっとだけ高圧縮でMAG出力\n"
     b "\n"
     b "省略時ｵﾌﾟｼｮﾝ: -d -ti -th -qf\n"
     b 0,0
     b "\n使えるかどうか妖しいオプション(^^;)\n"
     b "  -z        でばっぐ\n"
     b "  -ep       FRM 出力で, ﾌｧｲﾙの最後にRGB ﾊﾟﾚｯﾄを付加する\n"
     b "  -a        入力ﾌｧｲﾙの拡張子が無指定のとき、かってに拡張子を付加(ﾁｮｲ危険)\n"
     b "  -pbd      ﾃﾞﾌｫﾙﾄ･ﾊﾟﾚｯﾄを16色ならﾃﾞｼﾞﾀﾙ8色に, 256色ならVA256色にする\n"
     b "  -yl[N]    PI出力でﾙｰﾌﾟ･ﾓｰﾄﾞにする. N=1:左右ﾙｰﾌﾟ 2:上下 3:上下左右\n"
     b "  -yc       Pi出力で圧縮情報を表示\n"
     b "  -yd       Pi出力で出力データを表示\n"
     b "  -vsB,R,G,E B1,FRM,BLK変換のﾊﾞｯﾌｧとしてVRAMを使用(B,R,G,E:ｾｸﾞﾒﾝﾄ). 危険なので注意\n"
     b "             -vs指定時に出力ﾌｫｰﾏｯﾄ無指定ならVRAMへ出力(ﾊﾟﾚｯﾄ未対応)\n"
     b "             例)-vsA800,B000,B800,E000  PC9801のVRAMを指定\n"
    enddata
    var line:w

    ds = si = %var
    line = ax
    si = &msg
    bx = Dos.STDOUT
    di = 0
    loop
    	WRITLN.WritLn bx, si, 0xffff
    	si += ax
    	++di
    	if (di == line)
    	    Pri.Fmt "[more]"
    	    Dos.KbdIn
    	    Pri.Fmt "\b\b\b\b\b\b      \b\b\b\b\b\b"
    	    break (al == 0x1b)
    	    di = 0
    	fi
    endloop (b[si])
    Dos.EXIT 0
endproc

endmodule
